{{- define "helm-library.deployment.tpl" -}}
{{- $requiredMsg := include "helm-library.default-check-required-msg" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ required (printf $requiredMsg "name") .Values.name | quote }}
  labels:
    {{- include "helm-library.labels" . | nindent 4 }}
spec:
  replicas: {{ required (printf $requiredMsg "deployment.replicas") .Values.deployment.replicas }}
  minReadySeconds: {{ required (printf $requiredMsg "deployment.minReadySeconds") .Values.deployment.minReadySeconds }}
  strategy: {}
  selector:
    matchLabels:
      {{- include "helm-library.selector-labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "helm-library.labels" . | nindent 8 }}
      annotations:
        linkerd.io/inject: enabled
        redeployOnChange: {{ required (printf $requiredMsg "deployment.redeployOnChange") .Values.deployment.redeployOnChange | quote }}
    spec:
      {{- if .Values.serviceAccount }}
      {{- if .Values.serviceAccount.roleArn }}
      serviceAccountName: {{ .Values.serviceAccount.name | quote }}
      {{- end }}
      {{- end }}      
      {{- if .Values.deployment.imagePullSecret }}
      imagePullSecrets:
      - name: {{ required (printf $requiredMsg "deployment.imagePullSecret") .Values.deployment.imagePullSecret| quote }}
      {{- end }}
      securityContext:
        fsGroup: {{ required (printf $requiredMsg "deployment.runAsUser") .Values.deployment.runAsUser }}
        runAsUser: {{ required (printf $requiredMsg "deployment.runAsUser") .Values.deployment.runAsUser }}
        runAsNonRoot: {{ required (printf $requiredMsg "deployment.runAsNonRoot") .Values.deployment.runAsNonRoot }}
      containers:
      -
{{ include "helm-library.container.tpl" . | indent 8 }}
{{- end }}
{{- define "helm-library.deployment" -}}
{{- include "helm-library.util.merge" (append . "helm-library.deployment.tpl") -}}
{{- end -}}
