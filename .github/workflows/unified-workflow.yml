name: Helm Chart Test and Release
on:
  pull_request:
    types: [ opened, reopened, synchronize, ready_for_review ]
    branches: [ main ]
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      kubeapi_version:
        description: "Kubernetes API version"
        required: true
        default: "1.26.5"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  enumerate_tests:
    ## Always run tests.
    runs-on: ubuntu-latest
    outputs:
      valfiles: ${{ steps.find-values.outputs.valfiles }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Checkout actions
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions
          path: actions

      - name: Install ASDF toolset
        uses: ./actions/.github/actions/setup_asdf

      - name: Find Values Files
        id: find-values
        working-directory: tests/test-chart
        run: |
          valfiles=$(printf '['; find . -type f -regextype egrep -iregex "./values.*ya?ml" -printf '"%p",'| sed 's/,$//'; printf ']')
          echo "$valfiles"
          echo "valfiles=$valfiles" >> $GITHUB_OUTPUT
        shell: bash

  test:
    runs-on: ubuntu-latest
    needs: [enumerate_tests]
    strategy:
      matrix:
        values_file: ${{ fromJson(needs.enumerate_tests.outputs.valfiles) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Checkout actions
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions
          path: actions

      - name: Install ASDF toolset
        uses: ./actions/.github/actions/setup_asdf
      
      - name: Set magic chart version
        uses: ./actions/.github/actions/helm_test_magic_version
        with:
          test_path: ./tests/test-chart

      - name: Run test jobs
        uses: ./actions/.github/actions/helm_test
        with:
          value_file: ${{ matrix.values_file }}
          test_path: ./tests/test-chart
          kube_api_version: "1.26.5"

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' 
    needs: test
    environment:
      name: artifact-deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout actions
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/actions
          path: actions
  
      - name: Install ASDF toolset
        uses: ./actions/.github/actions/setup_asdf

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # - name: Import GPG key
      #   env:
      #     SIGNING_KEY_BASE64: ${{ secrets.GPG_PRIVATE_KEY }}
      #     SIGNING_KEY_PASSPHRASE_BASE64: ${{ secrets.GPG_PASSPHRASE }}
      #     KEY_PATH: ".gpg-dir"
      #     SIGNING_KEY_PATH: ".gnupg/secring.gpg"
      #     SIGNING_KEY_PASSPHRASE_PATH: ".gnupg/passphrase"
      #     PUBLIC_KEY_PATH: ".gnupg/pubring.gpg"
      #   run: |
      #     mkdir "$KEY_PATH"
      #     base64 -d <<< "$SIGNING_KEY_BASE64" > "$SIGNING_KEY_PATH"
      #     base64 -d <<< "$SIGNING_KEY_PASSPHRASE_BASE64" > "$SIGNING_KEY_PASSPHRASE_PATH"
      #     echo "CR_PASSPHRASE_FILE=$SIGNING_KEY_PASSPHRASE_PATH" >> "$GITHUB_ENV"
      #     echo "CR_KEYRING=$SIGNING_KEY_PATH" >> "$GITHUB_ENV"

      - name: determine version
        id: find_version
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          enable_prerelease_mode: true
          tag_prefix: "helm-library-"

      - name: Inject Chart Version
        uses: ./actions/.github/actions/helm_inject_chart_version
        with:
          chart_path: charts/helm-library/Chart.yaml
          version: ${{ steps.find_version.outputs.major }}.${{ steps.find_version.outputs.minor }}.${{ steps.find_version.outputs.patch }}

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: ./charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          # CR_SIGN: true
