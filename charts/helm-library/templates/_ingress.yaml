{{- define "helm-library.ingress.tpl" -}}
{{- $requiredMsg := include "helm-library.default-check-required-msg" . -}}
{{- $svcPort := (coalesce (first .Values.service.ports).port .Values.service.port) -}}
{{- $fullName := (coalesce (first .Values.service.ports).name .Values.service.name) -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ required (printf $requiredMsg "name") .Values.name | quote }}
  labels:
    {{- include "helm-library.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if .pathType }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
{{- define "helm-library.ingress" -}}
{{- include "helm-library.util.merge" (append . "helm-library.ingress.tpl") -}}
{{- end -}}

